// Mocks generated by Mockito 5.4.4 from annotations
// in keep_mindful/test/app/screens/metronome/metronome_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i5;

import 'package:flutter_blue_plus/flutter_blue_plus.dart' as _i6;
import 'package:keep_mindful/features/bluetooth/bluetooth.dart' as _i4;
import 'package:keep_mindful/features/metronome/metronome_notifier.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MetronomeNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMetronomeNotifier extends _i1.Mock implements _i2.MetronomeNotifier {
  @override
  int get numberOfBars => (super.noSuchMethod(
        Invocation.getter(#numberOfBars),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get isActive => (super.noSuchMethod(
        Invocation.getter(#isActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  double get bpm => (super.noSuchMethod(
        Invocation.getter(#bpm),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  bool get barSkipSwitcherEnabled => (super.noSuchMethod(
        Invocation.getter(#barSkipSwitcherEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateNumberOfBars(int? numberOfBars) => super.noSuchMethod(
        Invocation.method(
          #updateNumberOfBars,
          [numberOfBars],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> updateIsActive() => (super.noSuchMethod(
        Invocation.method(
          #updateIsActive,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void updateBpm(double? intensity) => super.noSuchMethod(
        Invocation.method(
          #updateBpm,
          [intensity],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> updateBarSkipSwither(bool? isSelected) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBarSkipSwither,
          [isSelected],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> resetMetronome() => (super.noSuchMethod(
        Invocation.method(
          #resetMetronome,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateDevice(_i4.KeepMindfulDevice? newDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDevice,
          [newDevice],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BluetoothDeviceStateNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockBluetoothDeviceStateNotifier extends _i1.Mock
    implements _i4.BluetoothDeviceStateNotifier {
  @override
  _i4.BleDeviceConnectionState get connectionState => (super.noSuchMethod(
        Invocation.getter(#connectionState),
        returnValue: _i4.BleDeviceConnectionState.connected,
        returnValueForMissingStub: _i4.BleDeviceConnectionState.connected,
      ) as _i4.BleDeviceConnectionState);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i3.Future<void> reconnect() => (super.noSuchMethod(
        Invocation.method(
          #reconnect,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> connect(_i6.BluetoothDevice? selectedDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #connect,
          [selectedDevice],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
