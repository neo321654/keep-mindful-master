// Mocks generated by Mockito 5.4.4 from annotations
// in keep_mindful/test/app/screens/duration/duration_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i5;

import 'package:keep_mindful/features/bluetooth/bluetooth.dart' as _i4;
import 'package:keep_mindful/features/timer/duration_notifier.dart' as _i6;
import 'package:keep_mindful/features/timer/timer_notifier.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDuration_0 extends _i1.SmartFake implements Duration {
  _FakeDuration_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TimerNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimerNotifier extends _i1.Mock implements _i2.TimerNotifier {
  @override
  Duration get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
        returnValueForMissingStub: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
      ) as Duration);

  @override
  bool get isCountdownActive => (super.noSuchMethod(
        Invocation.getter(#isCountdownActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetDuration() => super.noSuchMethod(
        Invocation.method(
          #resetDuration,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDuration(Duration? duration) => super.noSuchMethod(
        Invocation.method(
          #setDuration,
          [duration],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCountdownActive(bool? isActive) => super.noSuchMethod(
        Invocation.method(
          #setCountdownActive,
          [isActive],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> updateDevice(_i4.KeepMindfulDevice? newDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDevice,
          [newDevice],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DurationNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockDurationNotifier extends _i1.Mock implements _i6.DurationNotifier {
  @override
  Duration get duration => (super.noSuchMethod(
        Invocation.getter(#duration),
        returnValue: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
        returnValueForMissingStub: _FakeDuration_0(
          this,
          Invocation.getter(#duration),
        ),
      ) as Duration);

  @override
  bool get isCountdownActive => (super.noSuchMethod(
        Invocation.getter(#isCountdownActive),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetDuration() => super.noSuchMethod(
        Invocation.method(
          #resetDuration,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDuration(Duration? duration) => super.noSuchMethod(
        Invocation.method(
          #setDuration,
          [duration],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setCountdownActive(bool? isActive) => super.noSuchMethod(
        Invocation.method(
          #setCountdownActive,
          [isActive],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Future<void> updateDevice(_i4.KeepMindfulDevice? newDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDevice,
          [newDevice],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
