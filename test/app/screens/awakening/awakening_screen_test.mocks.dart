// Mocks generated by Mockito 5.4.4 from annotations
// in keep_mindful/test/app/screens/awakening/awakening_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:keep_mindful/features/awakening/models/models.dart' as _i3;
import 'package:keep_mindful/features/awakening/notifiers/awakening_notifier.dart'
    as _i2;
import 'package:keep_mindful/features/awakening/services/alarms_disable_qr_shown_service.dart'
    as _i7;
import 'package:keep_mindful/features/bluetooth/keep_mindful_device.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AwakeningNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAwakeningNotifier extends _i1.Mock implements _i2.AwakeningNotifier {
  @override
  List<_i3.Alarm> get alarms => (super.noSuchMethod(
        Invocation.getter(#alarms),
        returnValue: <_i3.Alarm>[],
        returnValueForMissingStub: <_i3.Alarm>[],
      ) as List<_i3.Alarm>);

  @override
  bool get waitingForAlarmConfirm => (super.noSuchMethod(
        Invocation.getter(#waitingForAlarmConfirm),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> onAlarmConfirmed() => (super.noSuchMethod(
        Invocation.method(
          #onAlarmConfirmed,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setAlarmIsActive(
    int? pos,
    bool? isActive,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAlarmIsActive,
          [
            pos,
            isActive,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addAlarm(_i3.Alarm? alarm) => (super.noSuchMethod(
        Invocation.method(
          #addAlarm,
          [alarm],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> removeAlarm(_i3.Alarm? alarm) => (super.noSuchMethod(
        Invocation.method(
          #removeAlarm,
          [alarm],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateAlarm(
    int? pos,
    _i3.Alarm? alarm,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAlarm,
          [
            pos,
            alarm,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resetAlarms() => (super.noSuchMethod(
        Invocation.method(
          #resetAlarms,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<void> updateDevice(_i5.KeepMindfulDevice? newDevice) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateDevice,
          [newDevice],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AlarmDisableQrShownService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlarmDisableQrShownService extends _i1.Mock
    implements _i7.AlarmDisableQrShownService {
  @override
  bool wasShown() => (super.noSuchMethod(
        Invocation.method(
          #wasShown,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i4.Future<void> markAsShown() => (super.noSuchMethod(
        Invocation.method(
          #markAsShown,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
