// Mocks generated by Mockito 5.4.4 from annotations
// in keep_mindful/test/features/awakening/notifiers/awakening_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:keep_mindful/features/features.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AlarmsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlarmsRepository extends _i1.Mock implements _i2.AlarmsRepository {
  @override
  _i3.Future<void> update(_i2.Alarm? alarm) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [alarm],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> add(_i2.Alarm? alarm) => (super.noSuchMethod(
        Invocation.method(
          #add,
          [alarm],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> remove(DateTime? createdAt) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [createdAt],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  List<_i2.Alarm> getList() => (super.noSuchMethod(
        Invocation.method(
          #getList,
          [],
        ),
        returnValue: <_i2.Alarm>[],
        returnValueForMissingStub: <_i2.Alarm>[],
      ) as List<_i2.Alarm>);

  @override
  _i3.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [AwakeningRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAwakeningRepository extends _i1.Mock
    implements _i2.AwakeningRepository {
  @override
  _i3.Future<void> setAlarmsUpdatedNow() => (super.noSuchMethod(
        Invocation.method(
          #setAlarmsUpdatedNow,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setAlarmsSentNow() => (super.noSuchMethod(
        Invocation.method(
          #setAlarmsSentNow,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setAlarmsDisabledUpdatedNow() => (super.noSuchMethod(
        Invocation.method(
          #setAlarmsDisabledUpdatedNow,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setAlarmsDisabledSentNow() => (super.noSuchMethod(
        Invocation.method(
          #setAlarmsDisabledSentNow,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
